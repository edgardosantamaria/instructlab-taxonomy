seq_multiwoz:
  instruction: "You are given a list of APIs below followed by a Query. Your task is to generate a sequence of API calls that is required to execute the Query. <api list> find_hotel(hotel-pricerange; hotel-type; hotel-parking; hotel-bookday; hotel-bookpeople; hotel-bookstay; hotel-stars; hotel-internet; hotel-name; hotel-area) : search for a hotel to stay in. book_hotel(hotel-pricerange; hotel-type; hotel-parking; hotel-bookday; hotel-bookpeople; hotel-bookstay; hotel-stars; hotel-internet; hotel-name; hotel-area) : book a hotel to stay in. find_train(train-destination; train-arriveby; train-departure; train-day; train-bookpeople; train-leaveat) : search for trains that take you places. book_train(train-destination; train-arriveby; train-departure; train-day; train-bookpeople; train-leaveat) : book train tickets. find_attraction(attraction-area; attraction-name; attraction-type) : search for places to see for leisure. find_restaurant(restaurant-pricerange; restaurant-area; restaurant-food; restaurant-name; restaurant-bookday; restaurant-bookpeople; restaurant-booktime) : search for places to wine and dine. book_restaurant(restaurant-pricerange; restaurant-area; restaurant-food; restaurant-name; restaurant-bookday; restaurant-bookpeople; restaurant-booktime) : book a table at a restaurant. find_hospital(hospital-department) : search for a medical facility or a doctor. book_taxi(taxi-leaveat; taxi-destination; taxi-departure; taxi-arriveby) : book taxis to travel between places. find_bus(bus-departure; bus-destination; bus-day; bus-leaveat) : search for a bus. police(police-name) : search for police station. Use only the APIs from the above list."
  question: "find the train that leaves at 12:30 on friday to stevenage. find the attraction in the west area that is called churchill college and is of the dontcare type."
  answer: "find_train(train-day = \"friday\"; train-destination = \"stevenage\"; train-leaveat = \"12:30\") [SEP] find_attraction(attraction-area = \"west\"; attraction-name = \"churchill college\"; attraction-type = \"dontcare\")"
seq_sgd:
  instruction: "You are given a list of APIs below followed by a Query. Your task is to generate a sequence of API calls that is required to execute the Query. <api list> FindMovies(genre; movie_name; director; actors; starring; title; directed_by; location; show_type; theater_name; cast) : Find out interesting movies that you like. LookupSong(genre; song_name; album; year; artist) : Search for a song. PlaySong(genre; playback_device; song_name; album; year; artist) : Play the selected song on the device. CheckBalance(account_type; amount; recipient_account_name; recipient_account_type) : Check the amount of money in a user's bank account. TransferMoney(account_type; recipient_account_type; recipient_name; transfer_amount; amount; recipient_account_name) : Transfer money from one bank account to another user's account. GetWeather(city; date) : Get the weather of a certain location on a date. FindProvider(city; therapist_name; type; stylist_name; doctor_name; dentist_name) : Discover therapist according to user's conditions. BookAppointment(appointment_date; appointment_time; city; therapist_name; type; stylist_name; doctor_name; dentist_name) : Make a reservation with the therapist based on user's wish. GetCarsAvailable(dropoff_date; pickup_city; pickup_date; pickup_location; pickup_time; type; car_type; city; end_date; start_date) : Discover cars available for rent in a certain location and period. FindApartment(area; number_of_beds; number_of_baths; property_name) : Find an apartment in a city for a given number of bedrooms. ScheduleVisit(area; number_of_beds; property_name; visit_date; number_of_baths; intent) : Schedule a visit to a property on a given date. ReserveCar(dropoff_date; pickup_city; pickup_date; pickup_location; pickup_time; type; add_insurance; car_type; city; end_date; start_date) : Make a rental car reservation. FindEvents(category; city_of_event; date; event_name; subcategory; city; event_type) : Find cultural events - concerts and plays - happening in a city. BuyEventTickets(category; city_of_event; date; event_name; number_of_seats; subcategory; city; event_type; number_of_tickets) : Buy tickets for a cultural event and date in a given city. RentMovie(actors; director; genre; movie_name; subtitle_language) : Rent a movie to watch, with optional subtitles. SearchHotel(location; number_of_rooms; place_name; star_rating; destination; hotel_name) : Look for accommodation in a city of choice. ReserveHotel(check_in_date; location; number_of_rooms; place_name; star_rating; stay_length; destination; hotel_name; number_of_days; check_out_date) : Reserve rooms at a selected place for given dates. FindBus(from_location; leaving_date; leaving_time; to_location; travelers; departure_date; departure_time; from_city; num_passengers; to_city; category; destination; fare_type; origin; group_size) : Search for a bus itinerary between two places on a certain date. SearchRoundtripFlights(airlines; departure_date; destination_city; number_checked_bags; origin_city; passengers; return_date; flight_class; destination_airport; origin_airport; number_of_tickets; seating_class; destination; origin; inbound_departure_time; outbound_departure_time; refundable) : Search for roundtrip flights for the trip. FindRestaurants(category; location; price_range; restaurant_name; has_seating_outdoors; has_vegetarian_options; city; cuisine; serves_alcohol) : Find restaurants by location and by category. ReserveRestaurant(category; date; location; number_of_seats; price_range; restaurant_name; time; has_seating_outdoors; has_vegetarian_options; city; cuisine; party_size; serves_alcohol) : Make a table reservation at a restaurant. SearchOnewayFlight(airlines; departure_date; destination_city; origin_city; flight_class; passengers; number_checked_bags; destination_airport; origin_airport; number_of_tickets; seating_class; outbound_departure_time; destination; origin; refundable; inbound_departure_time; return_date) : Search for one way flights to the destination. FindAttractions(location; category; good_for_kids) : Browse attractions in a given city. BuyBusTicket(from_location; leaving_date; leaving_time; to_location; travelers; departure_date; departure_time; destination; fare_type; group_size; origin) : Purchase the bus tickets. GetAlarms() : Get the alarms user has already set. AddAlarm(new_alarm_name; new_alarm_time) : Set a new alarm. GetRide(destination; number_of_riders; shared_ride; number_of_seats; ride_type) : Book a cab for any destination, number of seats and ride type. SearchHouse(where_to; number_of_adults; rating; has_laundry_service) : Find a house at a given location. BookHouse(check_in_date; check_out_date; number_of_adults; where_to; rating; has_laundry_service) : Book the selected house for given dates and number of adults. FindHomeByArea(area; intent; number_of_baths; number_of_beds; property_name) : Search for a property to rent or buy in a given city. BuyMovieTickets(location; movie_name; number_of_tickets; show_date; show_time; show_type; genre; theater_name) : Buy movie tickets for a particular show. PlayMovie(genre; subtitle_language; title; starring; directed_by; subtitles) : Watch the movie instantly online with your preferred subtitles. GetTimesForMovie(location; movie_name; show_date; show_time; genre; show_type; theater_name) : Get show times for a movie at a location on a given date. FindTrains(date_of_journey; from; journey_start_time; to; number_of_adults; class) : Find trains to a given destination city. LookupMusic(album; genre; year; track; artist; song_name) : Discover songs matching your taste. PlayMedia(album; device; genre; track; year; artist; playback_device; song_name) : Play the music. ShareLocation(contact_name; location) : Send your location to a contact. RequestPayment(amount; private_visibility; receiver) : Request payment from someone. MakePayment(amount; payment_method; private_visibility; receiver) : Send money to your friends. GetEventDates(city; event_name; event_type; category; date) : Get dates on which a given event is taking place. GetAvailableTime(event_date; event_name; event_time) : Get a list of available times for the user on a given day. AddEvent(event_date; event_location; event_name; event_time) : Add event to the user's calendar. ReserveRoundtripFlights(airlines; departure_date; destination_city; inbound_departure_time; origin_city; outbound_departure_time; passengers; return_date; seating_class) : Reserve a round-trip flight. GetEvents(event_date; event_name; event_time) : Get list of all calendar events for the user on a given day. ReserveOnewayFlight(airlines; departure_date; destination_city; origin_city; outbound_departure_time; passengers; seating_class; refundable) : Reserve a one-way flight. Use only the APIs from the above list."
  question: "Find attractions in NYC. Search for a hotel in NYC with the name 1 Hotel Brooklyn Bridge. Reserve a room at 1 Hotel Brooklyn Bridge in NYC, New York for March 4th, Monday next week and March 8th, Tuesday."
  answer: "FindAttractions(location = \"NYC\") [SEP] SearchHotel(hotel_name = \"1 Hotel Brooklyn Bridge\"; location = \"NYC\") [SEP] ReserveHotel(check_in_date = \"Monday next week, March 4th\"; check_out_date = \"March 8th\"; hotel_name = \"1 Hotel Brooklyn Bridge\"; location = \"New York, NYC\"; number_of_rooms = 1)"
seq_snips:
  instruction: "You are given a list of APIs below followed by a Query. Your task is to generate a sequence of API calls that is required to execute the Query. <api list>AddToPlaylist(playlist_owner; playlist; music_item; entity_name; artist; city; cuisine; restaurant_type; condition_description; object_type; object_name; sort; rating_value) : This tool allows you to add a song to a playlist. BookRestaurant(party_size_number; restaurant_type; facility; spatial_relation; city; timeRange; party_size_description; country; cuisine; restaurant_name; state; poi; sort; served_dish; entity_name; music_item; object_type; object_name; rating_value; playlist_owner; artist; playlist) : This tool allows you to book and reserve a table at a restaurant based on a location. PlayMusic(sort; service; artist; music_item; year; playlist; track; genre; album; city; object_type; object_name; condition_description; entity_name) : This tool allows you to play music. It takes in as input a track and artist. SearchCreativeWork(object_type; object_name; artist; condition_temperature; party_size_number; genre; service; music_item; playlist; restaurant_type; movie_name; entity_name; sort; city; track; year; spatial_relation; country; rating_value; rating_unit; object_select; party_size_description) : This tool allows you to perform a search. It takes in as input a user specified object name and type. SearchScreeningEvent(movie_name; location_name; object_type; spatial_relation; movie_type; timeRange; object_location_type; entity_name; playlist_owner; playlist; object_select; rating_value; object_name; genre) : This tool allows you to search for movie theaters based on a location. GetWeather(condition_description; spatial_relation; city; timeRange; condition_temperature; geographic_poi; country; state; current_location; artist; service; music_item; playlist; object_type; object_name; sort; party_size_number) : This tool allows you to get weather based on a location such as state, city or country. RateBook(object_name; rating_value; best_rating; rating_unit; object_part_of_series_type; object_select; object_type; music_item; playlist; artist; served_dish; entity_name; movie_name; year; party_size_description; sort; playlist_owner; service; condition_temperature; current_location; timeRange; restaurant_type; genre; city; country) : This tool allows you to rate a book. Use only the APIs from the above list."
  question: "play the last song by goldie and then can you get me the rakuen tsuihou: expelled from paradise television show"
  answer: "PlayMusic(sort = \"last\"; music_item = \"song\"; artist = \"goldie\") [SEP] SearchCreativeWork(object_name = \"rakuen tsuihou: expelled from paradise\"; object_type = \"television show\")"